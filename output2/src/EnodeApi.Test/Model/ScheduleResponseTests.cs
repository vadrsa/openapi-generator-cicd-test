/*
 * Enode API
 *
 * The Enode API is designed to make smart charging applications easy to develop. We provide an abstraction layer that reduces the complexity when extracting vehicle data and sending commands to vehicles from a variety of manufacturers.  The API has a RESTful architecture and utilizes OAuth2 authorization. 
 *
 * The version of the OpenAPI document: 1.17.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using EnodeApi.Api;
using EnodeApi.Model;
using EnodeApi.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace EnodeApi.Test.Model
{
    /// <summary>
    ///  Class for testing ScheduleResponse
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ScheduleResponseTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ScheduleResponse
        //private ScheduleResponse instance;

        public ScheduleResponseTests()
        {
            // TODO uncomment below to create an instance of ScheduleResponse
            //instance = new ScheduleResponse();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ScheduleResponse
        /// </summary>
        [Fact]
        public void ScheduleResponseInstanceTest()
        {
            // TODO uncomment below to test "IsType" ScheduleResponse
            //Assert.IsType<ScheduleResponse>(instance);
        }


        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'ScheduleType'
        /// </summary>
        [Fact]
        public void ScheduleTypeTest()
        {
            // TODO unit test for the property 'ScheduleType'
        }
        /// <summary>
        /// Test the property 'TargetId'
        /// </summary>
        [Fact]
        public void TargetIdTest()
        {
            // TODO unit test for the property 'TargetId'
        }
        /// <summary>
        /// Test the property 'TargetType'
        /// </summary>
        [Fact]
        public void TargetTypeTest()
        {
            // TODO unit test for the property 'TargetType'
        }
        /// <summary>
        /// Test the property 'ChargingLocationId'
        /// </summary>
        [Fact]
        public void ChargingLocationIdTest()
        {
            // TODO unit test for the property 'ChargingLocationId'
        }
        /// <summary>
        /// Test the property 'IsEnabled'
        /// </summary>
        [Fact]
        public void IsEnabledTest()
        {
            // TODO unit test for the property 'IsEnabled'
        }
        /// <summary>
        /// Test the property 'DefaultShouldCharge'
        /// </summary>
        [Fact]
        public void DefaultShouldChargeTest()
        {
            // TODO unit test for the property 'DefaultShouldCharge'
        }
        /// <summary>
        /// Test the property 'Rules'
        /// </summary>
        [Fact]
        public void RulesTest()
        {
            // TODO unit test for the property 'Rules'
        }

    }

}
