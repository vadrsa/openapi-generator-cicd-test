/*
 * Enode API
 *
 * The Enode API is designed to make smart charging applications easy to develop. We provide an abstraction layer that reduces the complexity when extracting vehicle data and sending commands to vehicles from a variety of manufacturers.  The API has a RESTful architecture and utilizes OAuth2 authorization. 
 *
 * The version of the OpenAPI document: 1.17.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using EnodeApi.Api;
using EnodeApi.Model;
using EnodeApi.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace EnodeApi.Test.Model
{
    /// <summary>
    ///  Class for testing HVAC
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class HVACTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for HVAC
        //private HVAC instance;

        public HVACTests()
        {
            // TODO uncomment below to create an instance of HVAC
            //instance = new HVAC();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of HVAC
        /// </summary>
        [Fact]
        public void HVACInstanceTest()
        {
            // TODO uncomment below to test "IsType" HVAC
            //Assert.IsType<HVAC>(instance);
        }


        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'Vendor'
        /// </summary>
        [Fact]
        public void VendorTest()
        {
            // TODO unit test for the property 'Vendor'
        }
        /// <summary>
        /// Test the property 'LastSeen'
        /// </summary>
        [Fact]
        public void LastSeenTest()
        {
            // TODO unit test for the property 'LastSeen'
        }
        /// <summary>
        /// Test the property 'IsReachable'
        /// </summary>
        [Fact]
        public void IsReachableTest()
        {
            // TODO unit test for the property 'IsReachable'
        }
        /// <summary>
        /// Test the property 'ChargingLocationId'
        /// </summary>
        [Fact]
        public void ChargingLocationIdTest()
        {
            // TODO unit test for the property 'ChargingLocationId'
        }
        /// <summary>
        /// Test the property 'IsActive'
        /// </summary>
        [Fact]
        public void IsActiveTest()
        {
            // TODO unit test for the property 'IsActive'
        }
        /// <summary>
        /// Test the property 'CurrentTemperature'
        /// </summary>
        [Fact]
        public void CurrentTemperatureTest()
        {
            // TODO unit test for the property 'CurrentTemperature'
        }
        /// <summary>
        /// Test the property 'TargetTemperature'
        /// </summary>
        [Fact]
        public void TargetTemperatureTest()
        {
            // TODO unit test for the property 'TargetTemperature'
        }
        /// <summary>
        /// Test the property 'ConsumptionRate'
        /// </summary>
        [Fact]
        public void ConsumptionRateTest()
        {
            // TODO unit test for the property 'ConsumptionRate'
        }
        /// <summary>
        /// Test the property 'Mode'
        /// </summary>
        [Fact]
        public void ModeTest()
        {
            // TODO unit test for the property 'Mode'
        }
        /// <summary>
        /// Test the property 'HeatSetpoint'
        /// </summary>
        [Fact]
        public void HeatSetpointTest()
        {
            // TODO unit test for the property 'HeatSetpoint'
        }
        /// <summary>
        /// Test the property 'CoolSetpoint'
        /// </summary>
        [Fact]
        public void CoolSetpointTest()
        {
            // TODO unit test for the property 'CoolSetpoint'
        }
        /// <summary>
        /// Test the property 'HoldType'
        /// </summary>
        [Fact]
        public void HoldTypeTest()
        {
            // TODO unit test for the property 'HoldType'
        }
        /// <summary>
        /// Test the property 'Information'
        /// </summary>
        [Fact]
        public void InformationTest()
        {
            // TODO unit test for the property 'Information'
        }
        /// <summary>
        /// Test the property 'Capabilities'
        /// </summary>
        [Fact]
        public void CapabilitiesTest()
        {
            // TODO unit test for the property 'Capabilities'
        }

    }

}
