/*
 * Enode API
 *
 * The Enode API is designed to make smart charging applications easy to develop. We provide an abstraction layer that reduces the complexity when extracting vehicle data and sending commands to vehicles from a variety of manufacturers.  The API has a RESTful architecture and utilizes OAuth2 authorization. 
 *
 * The version of the OpenAPI document: 1.17.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using EnodeApi.Api;
using EnodeApi.Model;
using EnodeApi.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace EnodeApi.Test.Model
{
    /// <summary>
    ///  Class for testing TestFirehoseWebhookResponse
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class TestFirehoseWebhookResponseTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for TestFirehoseWebhookResponse
        //private TestFirehoseWebhookResponse instance;

        public TestFirehoseWebhookResponseTests()
        {
            // TODO uncomment below to create an instance of TestFirehoseWebhookResponse
            //instance = new TestFirehoseWebhookResponse();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of TestFirehoseWebhookResponse
        /// </summary>
        [Fact]
        public void TestFirehoseWebhookResponseInstanceTest()
        {
            // TODO uncomment below to test "IsType" TestFirehoseWebhookResponse
            //Assert.IsType<TestFirehoseWebhookResponse>(instance);
        }


        /// <summary>
        /// Test the property 'Code'
        /// </summary>
        [Fact]
        public void CodeTest()
        {
            // TODO unit test for the property 'Code'
        }
        /// <summary>
        /// Test the property 'Body'
        /// </summary>
        [Fact]
        public void BodyTest()
        {
            // TODO unit test for the property 'Body'
        }
        /// <summary>
        /// Test the property 'Headers'
        /// </summary>
        [Fact]
        public void HeadersTest()
        {
            // TODO unit test for the property 'Headers'
        }

    }

}
