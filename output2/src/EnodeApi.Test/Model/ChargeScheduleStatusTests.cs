/*
 * Enode API
 *
 * The Enode API is designed to make smart charging applications easy to develop. We provide an abstraction layer that reduces the complexity when extracting vehicle data and sending commands to vehicles from a variety of manufacturers.  The API has a RESTful architecture and utilizes OAuth2 authorization. 
 *
 * The version of the OpenAPI document: 1.17.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using EnodeApi.Api;
using EnodeApi.Model;
using EnodeApi.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace EnodeApi.Test.Model
{
    /// <summary>
    ///  Class for testing ChargeScheduleStatus
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ChargeScheduleStatusTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ChargeScheduleStatus
        //private ChargeScheduleStatus instance;

        public ChargeScheduleStatusTests()
        {
            // TODO uncomment below to create an instance of ChargeScheduleStatus
            //instance = new ChargeScheduleStatus();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ChargeScheduleStatus
        /// </summary>
        [Fact]
        public void ChargeScheduleStatusInstanceTest()
        {
            // TODO uncomment below to test "IsType" ChargeScheduleStatus
            //Assert.IsType<ChargeScheduleStatus>(instance);
        }


        /// <summary>
        /// Test the property 'ScheduleId'
        /// </summary>
        [Fact]
        public void ScheduleIdTest()
        {
            // TODO unit test for the property 'ScheduleId'
        }
        /// <summary>
        /// Test the property 'ScheduleType'
        /// </summary>
        [Fact]
        public void ScheduleTypeTest()
        {
            // TODO unit test for the property 'ScheduleType'
        }
        /// <summary>
        /// Test the property 'ChangedAt'
        /// </summary>
        [Fact]
        public void ChangedAtTest()
        {
            // TODO unit test for the property 'ChangedAt'
        }
        /// <summary>
        /// Test the property 'State'
        /// </summary>
        [Fact]
        public void StateTest()
        {
            // TODO unit test for the property 'State'
        }
        /// <summary>
        /// Test the property 'IsCharging'
        /// </summary>
        [Fact]
        public void IsChargingTest()
        {
            // TODO unit test for the property 'IsCharging'
        }
        /// <summary>
        /// Test the property 'IsChargingExpected'
        /// </summary>
        [Fact]
        public void IsChargingExpectedTest()
        {
            // TODO unit test for the property 'IsChargingExpected'
        }
        /// <summary>
        /// Test the property 'IsChargingExpectedParts'
        /// </summary>
        [Fact]
        public void IsChargingExpectedPartsTest()
        {
            // TODO unit test for the property 'IsChargingExpectedParts'
        }
        /// <summary>
        /// Test the property 'UpcomingTransitions'
        /// </summary>
        [Fact]
        public void UpcomingTransitionsTest()
        {
            // TODO unit test for the property 'UpcomingTransitions'
        }
        /// <summary>
        /// Test the property 'SmartOverride'
        /// </summary>
        [Fact]
        public void SmartOverrideTest()
        {
            // TODO unit test for the property 'SmartOverride'
        }
        /// <summary>
        /// Test the property 'ExternalStart'
        /// </summary>
        [Fact]
        public void ExternalStartTest()
        {
            // TODO unit test for the property 'ExternalStart'
        }

    }

}
