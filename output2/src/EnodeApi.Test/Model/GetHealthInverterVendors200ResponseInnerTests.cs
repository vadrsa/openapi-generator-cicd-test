/*
 * Enode API
 *
 * The Enode API is designed to make smart charging applications easy to develop. We provide an abstraction layer that reduces the complexity when extracting vehicle data and sending commands to vehicles from a variety of manufacturers.  The API has a RESTful architecture and utilizes OAuth2 authorization. 
 *
 * The version of the OpenAPI document: 1.17.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using EnodeApi.Api;
using EnodeApi.Model;
using EnodeApi.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace EnodeApi.Test.Model
{
    /// <summary>
    ///  Class for testing GetHealthInverterVendors200ResponseInner
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class GetHealthInverterVendors200ResponseInnerTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for GetHealthInverterVendors200ResponseInner
        //private GetHealthInverterVendors200ResponseInner instance;

        public GetHealthInverterVendors200ResponseInnerTests()
        {
            // TODO uncomment below to create an instance of GetHealthInverterVendors200ResponseInner
            //instance = new GetHealthInverterVendors200ResponseInner();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of GetHealthInverterVendors200ResponseInner
        /// </summary>
        [Fact]
        public void GetHealthInverterVendors200ResponseInnerInstanceTest()
        {
            // TODO uncomment below to test "IsType" GetHealthInverterVendors200ResponseInner
            //Assert.IsType<GetHealthInverterVendors200ResponseInner>(instance);
        }


        /// <summary>
        /// Test the property 'Vendor'
        /// </summary>
        [Fact]
        public void VendorTest()
        {
            // TODO unit test for the property 'Vendor'
        }
        /// <summary>
        /// Test the property 'DisplayName'
        /// </summary>
        [Fact]
        public void DisplayNameTest()
        {
            // TODO unit test for the property 'DisplayName'
        }
        /// <summary>
        /// Test the property 'PortalName'
        /// </summary>
        [Fact]
        public void PortalNameTest()
        {
            // TODO unit test for the property 'PortalName'
        }
        /// <summary>
        /// Test the property 'Status'
        /// </summary>
        [Fact]
        public void StatusTest()
        {
            // TODO unit test for the property 'Status'
        }

    }

}
