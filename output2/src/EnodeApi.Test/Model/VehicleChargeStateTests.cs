/*
 * Enode API
 *
 * The Enode API is designed to make smart charging applications easy to develop. We provide an abstraction layer that reduces the complexity when extracting vehicle data and sending commands to vehicles from a variety of manufacturers.  The API has a RESTful architecture and utilizes OAuth2 authorization. 
 *
 * The version of the OpenAPI document: 1.17.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using EnodeApi.Api;
using EnodeApi.Model;
using EnodeApi.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace EnodeApi.Test.Model
{
    /// <summary>
    ///  Class for testing VehicleChargeState
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class VehicleChargeStateTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for VehicleChargeState
        //private VehicleChargeState instance;

        public VehicleChargeStateTests()
        {
            // TODO uncomment below to create an instance of VehicleChargeState
            //instance = new VehicleChargeState();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of VehicleChargeState
        /// </summary>
        [Fact]
        public void VehicleChargeStateInstanceTest()
        {
            // TODO uncomment below to test "IsType" VehicleChargeState
            //Assert.IsType<VehicleChargeState>(instance);
        }


        /// <summary>
        /// Test the property 'BatteryLevel'
        /// </summary>
        [Fact]
        public void BatteryLevelTest()
        {
            // TODO unit test for the property 'BatteryLevel'
        }
        /// <summary>
        /// Test the property 'Range'
        /// </summary>
        [Fact]
        public void RangeTest()
        {
            // TODO unit test for the property 'Range'
        }
        /// <summary>
        /// Test the property 'IsPluggedIn'
        /// </summary>
        [Fact]
        public void IsPluggedInTest()
        {
            // TODO unit test for the property 'IsPluggedIn'
        }
        /// <summary>
        /// Test the property 'IsCharging'
        /// </summary>
        [Fact]
        public void IsChargingTest()
        {
            // TODO unit test for the property 'IsCharging'
        }
        /// <summary>
        /// Test the property 'IsFullyCharged'
        /// </summary>
        [Fact]
        public void IsFullyChargedTest()
        {
            // TODO unit test for the property 'IsFullyCharged'
        }
        /// <summary>
        /// Test the property 'BatteryCapacity'
        /// </summary>
        [Fact]
        public void BatteryCapacityTest()
        {
            // TODO unit test for the property 'BatteryCapacity'
        }
        /// <summary>
        /// Test the property 'ChargeLimit'
        /// </summary>
        [Fact]
        public void ChargeLimitTest()
        {
            // TODO unit test for the property 'ChargeLimit'
        }
        /// <summary>
        /// Test the property 'ChargeRate'
        /// </summary>
        [Fact]
        public void ChargeRateTest()
        {
            // TODO unit test for the property 'ChargeRate'
        }
        /// <summary>
        /// Test the property 'ChargeTimeRemaining'
        /// </summary>
        [Fact]
        public void ChargeTimeRemainingTest()
        {
            // TODO unit test for the property 'ChargeTimeRemaining'
        }
        /// <summary>
        /// Test the property 'LastUpdated'
        /// </summary>
        [Fact]
        public void LastUpdatedTest()
        {
            // TODO unit test for the property 'LastUpdated'
        }
        /// <summary>
        /// Test the property 'IsChargingReasons'
        /// </summary>
        [Fact]
        public void IsChargingReasonsTest()
        {
            // TODO unit test for the property 'IsChargingReasons'
        }

    }

}
