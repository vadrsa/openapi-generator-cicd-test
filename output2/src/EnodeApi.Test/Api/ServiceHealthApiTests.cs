/*
 * Enode API
 *
 * The Enode API is designed to make smart charging applications easy to develop. We provide an abstraction layer that reduces the complexity when extracting vehicle data and sending commands to vehicles from a variety of manufacturers.  The API has a RESTful architecture and utilizes OAuth2 authorization. 
 *
 * The version of the OpenAPI document: 1.17.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using EnodeApi.Client;
using EnodeApi.Api;
// uncomment below to import models
//using EnodeApi.Model;

namespace EnodeApi.Test.Api
{
    /// <summary>
    ///  Class for testing ServiceHealthApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ServiceHealthApiTests : IDisposable
    {
        private ServiceHealthApi instance;

        public ServiceHealthApiTests()
        {
            instance = new ServiceHealthApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ServiceHealthApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ServiceHealthApi
            //Assert.IsType<ServiceHealthApi>(instance);
        }

        /// <summary>
        /// Test GetHealthChargerVendors
        /// </summary>
        [Fact]
        public void GetHealthChargerVendorsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetHealthChargerVendors();
            //Assert.IsType<List<GetHealthChargerVendors200ResponseInner>>(response);
        }

        /// <summary>
        /// Test GetHealthHvacVendors
        /// </summary>
        [Fact]
        public void GetHealthHvacVendorsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetHealthHvacVendors();
            //Assert.IsType<List<GetHealthHvacVendors200ResponseInner>>(response);
        }

        /// <summary>
        /// Test GetHealthInverterVendors
        /// </summary>
        [Fact]
        public void GetHealthInverterVendorsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetHealthInverterVendors();
            //Assert.IsType<List<GetHealthInverterVendors200ResponseInner>>(response);
        }

        /// <summary>
        /// Test GetHealthReady
        /// </summary>
        [Fact]
        public void GetHealthReadyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetHealthReady();
        }

        /// <summary>
        /// Test GetHealthVehicleVendors
        /// </summary>
        [Fact]
        public void GetHealthVehicleVendorsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetHealthVehicleVendors();
            //Assert.IsType<List<GetHealthVehicleVendors200ResponseInner>>(response);
        }
    }
}
