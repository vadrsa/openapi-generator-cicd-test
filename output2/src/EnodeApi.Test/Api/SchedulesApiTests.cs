/*
 * Enode API
 *
 * The Enode API is designed to make smart charging applications easy to develop. We provide an abstraction layer that reduces the complexity when extracting vehicle data and sending commands to vehicles from a variety of manufacturers.  The API has a RESTful architecture and utilizes OAuth2 authorization. 
 *
 * The version of the OpenAPI document: 1.17.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using EnodeApi.Client;
using EnodeApi.Api;
// uncomment below to import models
//using EnodeApi.Model;

namespace EnodeApi.Test.Api
{
    /// <summary>
    ///  Class for testing SchedulesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class SchedulesApiTests : IDisposable
    {
        private SchedulesApi instance;

        public SchedulesApiTests()
        {
            instance = new SchedulesApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SchedulesApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' SchedulesApi
            //Assert.IsType<SchedulesApi>(instance);
        }

        /// <summary>
        /// Test CreateSchedule
        /// </summary>
        [Fact]
        public void CreateScheduleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Schedule? schedule = null;
            //var response = instance.CreateSchedule(schedule);
            //Assert.IsType<ScheduleResponse>(response);
        }

        /// <summary>
        /// Test DeleteSchedule
        /// </summary>
        [Fact]
        public void DeleteScheduleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string scheduleId = null;
            //instance.DeleteSchedule(scheduleId);
        }

        /// <summary>
        /// Test GetSchedule
        /// </summary>
        [Fact]
        public void GetScheduleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string scheduleId = null;
            //var response = instance.GetSchedule(scheduleId);
            //Assert.IsType<ScheduleResponse>(response);
        }

        /// <summary>
        /// Test GetScheduleStatus
        /// </summary>
        [Fact]
        public void GetScheduleStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string scheduleId = null;
            //var response = instance.GetScheduleStatus(scheduleId);
            //Assert.IsType<ScheduleStatusResponse>(response);
        }

        /// <summary>
        /// Test GetSchedules
        /// </summary>
        [Fact]
        public void GetSchedulesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetSchedules();
            //Assert.IsType<List<ScheduleResponse>>(response);
        }

        /// <summary>
        /// Test UpdateSchedule
        /// </summary>
        [Fact]
        public void UpdateScheduleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string scheduleId = null;
            //PartialSchedule? partialSchedule = null;
            //var response = instance.UpdateSchedule(scheduleId, partialSchedule);
            //Assert.IsType<ScheduleResponse>(response);
        }
    }
}
