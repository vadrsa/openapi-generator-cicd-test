/*
 * Enode API
 *
 * The Enode API is designed to make smart charging applications easy to develop. We provide an abstraction layer that reduces the complexity when extracting vehicle data and sending commands to vehicles from a variety of manufacturers.  The API has a RESTful architecture and utilizes OAuth2 authorization. 
 *
 * The version of the OpenAPI document: 1.17.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = EnodeApi.Client.OpenAPIDateConverter;

namespace EnodeApi.Model
{
    /// <summary>
    /// Inverter Vendor
    /// </summary>
    /// <value>Inverter Vendor</value>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum InverterVendor
    {
        /// <summary>
        /// Enum FRONIUS for value: FRONIUS
        /// </summary>
        [EnumMember(Value = "FRONIUS")]
        FRONIUS = 1,

        /// <summary>
        /// Enum GROWATT for value: GROWATT
        /// </summary>
        [EnumMember(Value = "GROWATT")]
        GROWATT = 2,

        /// <summary>
        /// Enum SOLAREDGE for value: SOLAREDGE
        /// </summary>
        [EnumMember(Value = "SOLAREDGE")]
        SOLAREDGE = 3,

        /// <summary>
        /// Enum SOLIS for value: SOLIS
        /// </summary>
        [EnumMember(Value = "SOLIS")]
        SOLIS = 4,

        /// <summary>
        /// Enum ENPHASE for value: ENPHASE
        /// </summary>
        [EnumMember(Value = "ENPHASE")]
        ENPHASE = 5,

        /// <summary>
        /// Enum GOODWE for value: GOODWE
        /// </summary>
        [EnumMember(Value = "GOODWE")]
        GOODWE = 6,

        /// <summary>
        /// Enum SMA for value: SMA
        /// </summary>
        [EnumMember(Value = "SMA")]
        SMA = 7,

        /// <summary>
        /// Enum EMA for value: EMA
        /// </summary>
        [EnumMember(Value = "EMA")]
        EMA = 8,

        /// <summary>
        /// Enum HUAWEI for value: HUAWEI
        /// </summary>
        [EnumMember(Value = "HUAWEI")]
        HUAWEI = 9

    }

}
