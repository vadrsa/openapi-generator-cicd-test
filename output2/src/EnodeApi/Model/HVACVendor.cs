/*
 * Enode API
 *
 * The Enode API is designed to make smart charging applications easy to develop. We provide an abstraction layer that reduces the complexity when extracting vehicle data and sending commands to vehicles from a variety of manufacturers.  The API has a RESTful architecture and utilizes OAuth2 authorization. 
 *
 * The version of the OpenAPI document: 1.17.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = EnodeApi.Client.OpenAPIDateConverter;

namespace EnodeApi.Model
{
    /// <summary>
    /// HVAC Vendor
    /// </summary>
    /// <value>HVAC Vendor</value>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum HVACVendor
    {
        /// <summary>
        /// Enum TADO for value: TADO
        /// </summary>
        [EnumMember(Value = "TADO")]
        TADO = 1,

        /// <summary>
        /// Enum MILL for value: MILL
        /// </summary>
        [EnumMember(Value = "MILL")]
        MILL = 2,

        /// <summary>
        /// Enum ADAX for value: ADAX
        /// </summary>
        [EnumMember(Value = "ADAX")]
        ADAX = 3,

        /// <summary>
        /// Enum ECOBEE for value: ECOBEE
        /// </summary>
        [EnumMember(Value = "ECOBEE")]
        ECOBEE = 4,

        /// <summary>
        /// Enum SENSIBO for value: SENSIBO
        /// </summary>
        [EnumMember(Value = "SENSIBO")]
        SENSIBO = 5,

        /// <summary>
        /// Enum HONEYWELL for value: HONEYWELL
        /// </summary>
        [EnumMember(Value = "HONEYWELL")]
        HONEYWELL = 6,

        /// <summary>
        /// Enum MITSUBISHI for value: MITSUBISHI
        /// </summary>
        [EnumMember(Value = "MITSUBISHI")]
        MITSUBISHI = 7,

        /// <summary>
        /// Enum MICROMATIC for value: MICROMATIC
        /// </summary>
        [EnumMember(Value = "MICROMATIC")]
        MICROMATIC = 8,

        /// <summary>
        /// Enum NEST for value: NEST
        /// </summary>
        [EnumMember(Value = "NEST")]
        NEST = 9

    }

}
